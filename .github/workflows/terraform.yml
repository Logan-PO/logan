name: terraform

on:
  workflow_call:
    inputs:
      apply:
        required: false
        type: boolean
        default: false
    secrets:
      BOT_APP_ID:
        required: true
      BOT_APP_PRIVATE_KEY:
        required: true

permissions:
  contents: write
  id-token: write
  pull-requests: write
  actions: read

defaults:
  run:
    shell: bash

env:
  TERRAFORM_VERSION: 1.10.3
  GHA_WORKER_ROLE: arn:aws:iam::970547354432:role/gha-worker

jobs:

  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    steps:
      -
        name: Generate app token
        id: app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_APP_PRIVATE_KEY }}
      -
        uses: actions/checkout@v4
      -
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.GHA_WORKER_ROLE }}
          role-session-name: ${{ github.run_id }}
          aws-region: us-west-2
      -
        name: terraform fmt
        run: terraform fmt
      -
        name: Detect changes
        id: detect-changes
        run: |
          git add .
          git status -s

          if [ -n "$(git status -s)" ]; then
            echo "detected=true" | tee -a "$GITHUB_OUTPUT"
          else
            echo "detected=false" | tee -a "$GITHUB_OUTPUT"
          fi
      -
        name: Commit changes if detected
        if: ${{ steps.detect-changes.outputs.detected == 'true' }}
        uses: planetscale/ghcommit-action@v0.2.0
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          commit_message: terraform fmt
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
      -
        name: terraform init
        run: terraform init
      -
        name: terraform plan
        id: plan
        run: |
          # Wrapping to capture logs and exit status
          (
            set +e
            terraform plan -no-color;
            echo "$?" > "${{ runner.temp }}/plan-status.txt";
          ) 2>&1 | tee "${{ runner.temp }}/plan-output.txt"

          exit_code=$(cat "${{ runner.temp }}/plan-status.txt")
          echo "exit_code=$exit_code" | tee -a "$GITHUB_OUTPUT"
          
          exit "$exit_code"
      -
        name: Capture plan logs
        id: plan-logs
        if: ${{ !cancelled() }}
        run: |
          stopToken=$(date '+%s')
          echo "::stop-commands::${stopToken}"
          {
            echo 'logs<<EOF';
            cat "${{ runner.temp }}/plan-output.txt";
            echo 'EOF';
          } | tee -a "$GITHUB_OUTPUT"
          echo "::${stopToken}::"
      -
        name: Comment plan result
        uses: marocchino/sticky-pull-request-comment@v2
        if: ${{ !cancelled() }}
        with:
          recreate: true
          header: terraform-plan
          message: |
            `terraform plan` ${{ steps.plan.outputs.exit_code == '0' && 'succeeded' || 'failed' }}

            <details>
              <summary>plan result</summary>

              ```
              ${{ steps.plan-logs.outputs.logs }}
              ```
            </details>


  apply:
    needs: plan
    if: ${{ inputs.apply == true }}
    environment: infra-prod
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      -
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.GHA_WORKER_ROLE }}
          role-session-name: ${{ github.run_id }}
          aws-region: us-west-2
      -
        name: terraform init
        run: terraform init
        working-directory: infra
      -
        name: terraform apply
        working-directory: infra
        run: |
          terraform apply \
            -auto-approve
