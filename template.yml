AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  SendRemindersFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SendReminders
      Handler: services/backend/src/reminders-agent.sendReminders
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ScheduleTrigger:
          Type: Schedule
          Properties:
            Description: Send reminders every 15 minutes
            Name: SendRemindersTrigger
            Schedule: cron(0/15 * * * ? *)
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: logan-gateway
      StageName: Prod
      Cors:
        AllowOrigin: "'*'"
      EndpointConfiguration:
        Type: EDGE
  PingFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: Ping
      Handler: services/backend/src/controllers/ping.ping
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /ping
            Method: get
            RestApiId:
              Ref: ApiGateway
  VerifyTokenFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: VerifyIdToken
      Handler: services/backend/src/controllers/verify-id-token.verifyIdTokenHandler
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
        Runtime: nodejs12.x
        Events:
          ApiEvent:
            Type: Api
            Properties:
              Path: /auth/verify
              Method: post
              RestApiId:
                Ref: ApiGateway
  GetAssignmentFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAssignment
      Handler: services/backend/src/controllers/assignments-controller.getAssignment
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /assignments/{aid}
            Method: get
            RestApiId:
              Ref: ApiGateway
  GetAssignmentsFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetAssignments
      Handler: services/backend/src/controllers/assignments-controller.getAssignments
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /assignments
            Method: get
            RestApiId:
              Ref: ApiGateway
  CreateAssignmentFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateAssignment
      Handler: services/backend/src/controllers/assignments-controller.createAssignment
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /assignments
            Method: post
            RestApiId:
              Ref: ApiGateway
  UpdateAssignmentFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateAssignment
      Handler: services/backend/src/controllers/assignments-controller.updateAssignment
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /assignments/{aid}
            Method: put
            RestApiId:
              Ref: ApiGateway
  DeleteAssignmentFn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/backend/src/controllers/assignments-controller.deleteAssignment
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      FunctionName: DeleteAssignment
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /assignments/{aid}
            Method: delete
            RestApiId:
              Ref: ApiGateway
  GetTaskFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetTask
      Handler: services/backend/src/controllers/tasks-controller.getTask
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks/{tid}
            Method: get
            RestApiId:
              Ref: ApiGateway
  GetTasksFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetTasks
      Handler: services/backend/src/controllers/tasks-controller.getTasks
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks
            Method: get
            RestApiId:
              Ref: ApiGateway
  CreateTaskFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateTask
      Handler: services/backend/src/controllers/tasks-controller.createTask
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks
            Method: post
            RestApiId:
              Ref: ApiGateway
  UpdateTaskFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateTask
      Handler: services/backend/src/controllers/tasks-controller.updateTask
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks/{tid}
            Method: put
            RestApiId:
              Ref: ApiGateway
  DeleteTaskFn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/backend/src/controllers/tasks-controller.deleteTask
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      FunctionName: DeleteTask
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /tasks/{tid}
            Method: delete
            RestApiId:
              Ref: ApiGateway
  GetCourseFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetCourse
      Handler: services/backend/src/controllers/courses-controller.getCourse
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courses/{cid}
            Method: get
            RestApiId:
              Ref: ApiGateway
  GetCoursesFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetCourses
      Handler: services/backend/src/controllers/courses-controller.getCourses
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courses
            Method: get
            RestApiId:
              Ref: ApiGateway
  CreateCourseFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateCourse
      Handler: services/backend/src/controllers/courses-controller.createCourse
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courses
            Method: post
            RestApiId:
              Ref: ApiGateway
  UpdateCourseFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateCourse
      Handler: services/backend/src/controllers/courses-controller.updateCourse
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courses/{cid}
            Method: put
            RestApiId:
              Ref: ApiGateway
  DeleteCourseFn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/backend/src/controllers/courses-controller.deleteCourse
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      FunctionName: DeleteCourse
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courses/{cid}
            Method: delete
            RestApiId:
              Ref: ApiGateway
  GetUserFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetUser
      Handler: services/backend/src/controllers/users-controller.getUser
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users/{uid}
            Method: get
            RestApiId:
              Ref: ApiGateway
  CreateUserFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateUser
      Handler: services/backend/src/controllers/users-controller.createUser
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users
            Method: post
            RestApiId:
              Ref: ApiGateway
  UpdateUserFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateUser
      Handler: services/backend/src/controllers/users-controller.updateUser
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users/{uid}
            Method: put
            RestApiId:
              Ref: ApiGateway
  DeleteUserFn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/backend/src/controllers/users-controller.deleteUser
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      FunctionName: DeleteUser
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /users/{uid}
            Method: delete
            RestApiId:
              Ref: ApiGateway
  GetHolidayFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetHoliday
      Handler: services/backend/src/controllers/holidays-controller.getHoliday
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /holidays/{hid}
            Method: get
            RestApiId:
              Ref: ApiGateway
  GetHolidaysFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetHolidays
      Handler: services/backend/src/controllers/holidays-controller.getHolidays
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /holidays
            Method: get
            RestApiId:
              Ref: ApiGateway
  CreateHolidayFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateHoliday
      Handler: services/backend/src/controllers/holidays-controller.createHoliday
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /holidays
            Method: post
            RestApiId:
              Ref: ApiGateway
  UpdateHolidayFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateHoliday
      Handler: services/backend/src/controllers/holidays-controller.updateHoliday
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /holidays/{hid}
            Method: put
            RestApiId:
              Ref: ApiGateway
  DeleteHolidayFn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/backend/src/controllers/holidays-controller.deleteHoliday
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      FunctionName: DeleteHoliday
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /holidays/{hid}
            Method: delete
            RestApiId:
              Ref: ApiGateway
  GetTermFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetHoliday
      Handler: services/backend/src/controllers/terms-controller.getTerm
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /terms/{tid}
            Method: get
            RestApiId:
              Ref: ApiGateway
  GetTermsFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetHolidays
      Handler: services/backend/src/controllers/terms-controller.getTerms
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /terms
            Method: get
            RestApiId:
              Ref: ApiGateway
  CreateTermFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: CreateTerm
      Handler: services/backend/src/controllers/terms-controller.createTerm
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /terms
            Method: post
            RestApiId:
              Ref: ApiGateway
  UpdateTermFn:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UpdateTerm
      Handler: services/backend/src/controllers/terms-controller.updateTerm
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /terms/{tid}
            Method: put
            RestApiId:
              Ref: ApiGateway
  DeleteTermFn:
    Type: AWS::Serverless::Function
    Properties:
      Handler: services/backend/src/controllers/terms-controller.deleteTerm
      Role: arn:aws:iam::417995070141:role/LoganLambdaRole
      FunctionName: DeleteHoliday
      Runtime: nodejs12.x
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /terms/{tid}
            Method: delete
            RestApiId:
              Ref: ApiGateway
